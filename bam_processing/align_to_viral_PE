
#!/bin/bash

## Amy Olex
## 5/15/15
#
## Script to run bowtie2 alignment on the paired end unmapped reads from the HNSC TCGA WGS data set.
## INPUT: $1 is the name of the file with the list of fastq files to process, fq1 and fq2 are on same line seperated by a tab.
## INPUT: $2 is the number of jobs to process in parallel.
##
## UPDATE 9/27/16: I added a pipe so that the output is	a BAM file to a	specified directory instead of a SAM file in the working directory.
## UPDATE 10/5/16: I added the -X option to specify a really large fragment size.
## UPDATE 10/6/16: I added the ability to input the reference file in the command line instead of having it hard coded.
## To Run: Go to directory where the fastq files are, unless the input file $1 has the relative path to the fastq files wrt the directory you run this script from.
##
##USAGE: align_to_viral_PE <file_list> <outputdir> <ref genome> <maxjobs>

FILELIST=$1
OUTDIR=$2
REF=$3
MAXJOBS=$4


## Define maxjobs function
function maxjobs {
        if [ $# -ne 1 ]
        then
                num=1
        else
                num=$1
        fi

        while [ `jobs -r | wc -l` -ge $num ]
        do
                sleep 2
        done
}

echo "MY SCRIPT: Starting alignments on `date`"

cat $FILELIST | while read file1 file2
do
	base=$(basename $file1 .bam.1.fastq)
	out=`echo $OUTDIR"/"$base".realigned.pe.bam"`
	if [ ! -e $out ]
	then
		maxjobs $MAXJOBS
		echo "MYSCRIPT: Started on `date`: "$base
		bowtie2 -x $REF -1 $file1 -2 $file2 -X 2000 --end-to-end --threads 2 --very-sensitive --quiet | samtools view -bS - > $out &
		echo "MY SCRIPT: PID for "$base" is "$!
	else
		echo "MYSCRIPT: File exists, skipping : $out"
	fi
done

echo "MY SCRIPT: Completed all alignments on `date`"

